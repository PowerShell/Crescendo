steps:

- powershell: |
    $powerShellPath = Join-Path -Path $env:AGENT_TEMPDIRECTORY -ChildPath 'powershell'
    Invoke-WebRequest -Uri https://raw.githubusercontent.com/PowerShell/PowerShell/master/tools/install-powershell.ps1 -outfile ./install-powershell.ps1
    ./install-powershell.ps1 -Destination $powerShellPath
    $vstsCommandString = "vso[task.setvariable variable=PATH]$powerShellPath;$env:PATH"
    Write-Host "sending " + $vstsCommandString
    Write-Host "##$vstsCommandString"
  displayName: Install PowerShell Core

- task: DownloadBuildArtifacts@0
  displayName: 'Download artifacts'
  inputs:
    buildType: current
    downloadType: specific
    itemPattern: '**/*.nupkg'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
  displayName: 'Component Detection'
  inputs:
    sourceScanPath: '$(Build.SourcesDirectory)'
    snapshotForceEnabled: true

- task: securedevelopmentteam.vss-secure-development-tools.build-task-antimalware.AntiMalware@3
  displayName: 'Run Defender Scan'

- task: securedevelopmentteam.vss-secure-development-tools.build-task-credscan.CredScan@2
  displayName: 'Run CredScan'
  inputs:
    toolMajorVersion: V2
    debugMode: false
  continueOnError: true

- task: securedevelopmentteam.vss-secure-development-tools.build-task-policheck.PoliCheck@1
  displayName: 'Run PoliCheck'
  inputs:
    targetType: F
    optionsFC: 0
    optionsXS: 0
    optionsPE: '1|2|3|4'
    optionsHMENABLE: 0
#      optionsRulesDBPath: '$(Build.SourcesDirectory)\tools\terms\PowerShell-Terms-Rules.mdb'
#      optionsFTPATH: '$(Build.SourcesDirectory)\tools\terms\FileTypeSet.xml'
    toolVersion: 5.8.2.1
  continueOnError: true

- task: securedevelopmentteam.vss-secure-development-tools.build-task-publishsecurityanalysislogs.PublishSecurityAnalysisLogs@2
  displayName: 'Publish Security Analysis Logs to Build Artifacts'
  continueOnError: true

- task: securedevelopmentteam.vss-secure-development-tools.build-task-uploadtotsa.TSAUpload@1
  displayName: 'TSA upload to Codebase: PSNativeCommandProxy2020 Stamp: Azure'
  inputs:
    codeBaseName: PSNativeCommandProxy2020
    tsaVersion: TsaV2
    uploadFortifySCA: false
    uploadFxCop: false
    uploadModernCop: false
    uploadPREfast: false
    uploadRoslyn: false
    uploadTSLint: false
    uploadAPIScan: false

- task: securedevelopmentteam.vss-secure-development-tools.build-task-report.SdtReport@1
  displayName: 'Create Security Analysis Report'
  inputs:
    TsvFile: false
    APIScan: false
    BinSkim: false
    CredScan: true
    PoliCheck: true
    PoliCheckBreakOn: Severity2Above

- pwsh: |
    Unregister-PSRepository -Name 'pspackageproject-local-repo' -ErrorAction Ignore
  displayName: Unregister temporary PSRepository
  condition: always()

